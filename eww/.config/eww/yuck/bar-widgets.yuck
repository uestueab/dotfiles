(defwidget bar [monitor]
    (centerbox  
      :class "main-bar"
      (left :monitor monitor)
      (box);
      (right :monitor monitor)))
  
(defwidget left [monitor]
  (box 
    :space-evenly false
    :spacing 5
    :halign "start"
    (launcher)
    (box
      :class "block workspaces"
      :space-evenly false
      (workspaces :monitor monitor)
    )
    (mode)
  )
) 

(defwidget right [monitor]
  (box 
    :space-evenly false
    :spacing 5
    :halign "end"
    
    (datetime)
    (tray)
  )
)

(defwidget launcher []
  (eventbox
    :cursor "pointer"
    :tooltip "Apps"
    (button 
      :class "block launcher"
      :onclick "notify-send 'Notification' 'Test ...123... :)' "
      ;:onrightclick "rofi -show power-menu -modi power-menu:rofi-power-menu -config ~/.config/rofi/config-power.rasi &"
      "")))


(defwidget workspaces [monitor]
  (box
    :space-evenly false
    (for workspace in workspaces
      (eventbox
        :cursor "pointer"
        :visible {workspace.output == monitor ? true : false}
        (button
          ;:class {arraylength(workspaces) == 1 ? "ws" : workspace.focused ? "active-ws" : "ws"}
          :class {workspace.focused ? "active-ws" : "ws"}
          :onclick "i3-msg workspace ${workspace.name}"
          "${workspace.name == 1 ? "web"
                : workspace.name == 2 ? "term"
                : workspace.name == 3 ? "vim"
                : workspace.name == 4 ? "study"
                : workspace.name == 5 ? "idle"
                : workspace.name == 6 ? "misc"
                : workspace.name == 7 ? "steam" : ""
                }")))))

(defwidget mode []
  (box
    :class "${mode == "default" ? "" : "block"} mode"
    :space-evenly false
    :halign "end"
    (label
      :class "separator"
      :visible {mode == "default" ? false : true}
      :text "󰄾")
    (label
      :visible {mode == "default" ? false : true}
      :class {mode == "default" ? "" : "mode-entered"}
      :text "${mode}")))


(defwidget datetime []
  (label
    :class "block date"
    :text "${datetime}"))


(defwidget tray []
  (box
    :class "block tray"
    (eventbox
        :onhover "eww update hover_tray=true" :onhoverlost "eww update hover_tray=false" 
      :cursor "pointer" :class "block date ${hover_tray ? "hover_tray" : "" }"
      (button
        :onclick "$HOME/launch_left"
        ""))))
